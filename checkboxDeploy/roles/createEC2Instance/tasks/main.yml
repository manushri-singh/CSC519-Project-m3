- name: Exporting necessary environment variable
  shell: export ANSIBLE_HOST_KEY_CHECKING=False

- name: Install Prerequisites
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - python3-pip
  become: yes

- name: Install pymongo to use with mongodb
  pip:
    name: "{{item}}"
    state: present
  become: yes
  with_items:
    - boto
    - boto3

- name: Checking if EC2 instance for checkbox nomad exists
  ec2_remote_facts:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    region: "{{aws_region}}"
    filters:
      "tag:Name": checkbox_nomad
      "instance-state-code": "16"
  register: ec2_checkbox_nomad

- name: Create security group
  ec2_group:
    name: checkbox-deploy-group
    description: "A Security for checkbox group"
    region: "{{aws_region}}"
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    rules:
      - proto: all
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: basic_firewall

- name: Launch new instances for checkbox nomad
  ec2:
    key_name: "{{ key_pair }}"
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    instance_type: "{{ instance_type }}"
    group_id: "{{basic_firewall.group_id}}"
    image: "{{ ami_id }}"
    wait: true
    region: "{{ aws_region }}"
    instance_tags:
      Name: checkbox_nomad
    count: 1
  register: checkbox_nomad_instance
  when: ec2_checkbox_nomad.instances | length!=4
  with_items: 
    - tags: ['Name', 'checkbox_nomad1']
    - tags: ['Name', 'checkbox_nomad2']
    - tags: ['Name', 'checkbox_nomad3']
    - tags: ['Name', 'checkbox_nomad4']


- name: Get Private IP of existing checkbox-0 group instances
  set_fact: checkbox0_nomad_ec2_ip="{{ec2_checkbox_nomad.instances[0].public_ip_address}}"
  when: ec2_checkbox_nomad.instances|length==4

- name: Get Private IP of existing checkbox-1 group instances
  set_fact: checkbox1_nomad_ec2_ip="{{ec2_checkbox_nomad.instances[1].public_ip_address}}"
  when: ec2_checkbox_nomad.instances|length==4

- name: Get Private IP of existing checkbox-2 group instances
  set_fact: checkbox2_nomad_ec2_ip="{{ec2_checkbox_nomad.instances[2].public_ip_address}}"
  when: ec2_checkbox_nomad.instances|length==4

- name: Get Private IP of existing checkbox-3 group instances
  set_fact: checkbox3_nomad_ec2_ip="{{ec2_checkbox_nomad.instances[3].public_ip_address}}"
  when: ec2_checkbox_nomad.instances|length==4


- name: Get Private IP of new checkbox-0 group instances
  set_fact: checkbox0_nomad_ec2_ip="{{checkbox_nomad_instance.results[0]['instances'][0].public_ip}}"
  when: ec2_checkbox_nomad.instances|length!=4

- name: Get Private IP of new checkbox-1 group instances
  set_fact: checkbox1_nomad_ec2_ip="{{checkbox_nomad_instance.results[1]['instances'][0].public_ip}}"
  when: ec2_checkbox_nomad.instances|length!=4

- name: Get Private IP of new checkbox-2 group instances
  set_fact: checkbox2_nomad_ec2_ip="{{checkbox_nomad_instance.results[2]['instances'][0].public_ip}}"
  when: ec2_checkbox_nomad.instances|length!=4

- name: Get Private IP of new checkbox-3 group instances
  set_fact: checkbox3_nomad_ec2_ip="{{checkbox_nomad_instance.results[3]['instances'][0].public_ip}}"
  when: ec2_checkbox_nomad.instances|length!=4